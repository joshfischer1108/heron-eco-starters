

name: "dynamic-output-field"

config:
  topology.workers: 1

################
# This ECO topology demonstrates how you can declare output fields dynamically via property injection
#
#
###############

spouts:
# This spout demonstrates how to declare output fields using constructor injection
  - id: "configurable-spout"
    className: "org.apache.heron.eco.starters.ConfigurableFibonacciSpout"
    constructorArgs:
      - "number"
    parallelism: 1

# This spout demonstrates how to declare output fields using setter/public field injection
#  - id: "configurable-spout"
#    className: "org.apache.heron.eco.starters.ConfigurableFibonacciSpout"
#    properties:
#      - name: "fieldName"
#        value: "number"
#    parallelism: 1

# This spout demonstrates how to declare output fields using a config method
#  - id: "configurable-spout"
#    className: "org.apache.heron.eco.starters.ConfigurableFibonacciSpout"
#    configMethods:
#      - name: "configureNumberSpout"
#        args:
#          - "number"

bolts:
  - id: "print-bolt"
    className: "org.apache.heron.eco.starters.SystemOutBolt"
    parallelism: 1

streams:
  - from: "configurable-spout"
    to: "print-bolt"
    grouping:
      type: FIELDS
      args: ["number"]
